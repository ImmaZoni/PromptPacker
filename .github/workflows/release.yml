name: Create Release and Build Binaries

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    name: Build Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            output_suffix: linux-amd64
          - goos: linux
            goarch: arm64
            output_suffix: linux-arm64
          - goos: windows
            goarch: amd64
            output_suffix: windows-amd64.exe
          - goos: darwin
            goarch: amd64
            output_suffix: darwin-amd64
          - goos: darwin
            goarch: arm64
            output_suffix: darwin-arm64
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          cache-dependency-path: go.sum
      - name: Build for ${{ matrix.goos }}/${{ matrix.goarch }}
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          BINARY_NAME="promptpacker-${{ matrix.output_suffix }}"
          echo "Building ${BINARY_NAME}..."
          # Ensure PromptPacker.go is the correct source file name
          go build -o "${BINARY_NAME}" -ldflags="-s -w" PromptPacker.go
          echo "Build complete: ${BINARY_NAME}"
      - name: Upload artifact (${{ matrix.output_suffix }})
        uses: actions/upload-artifact@v4
        with:
          name: promptpacker-${{ matrix.output_suffix }}
          path: promptpacker-${{ matrix.output_suffix }}
          if-no-files-found: error
  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          generate_release_notes: true
          files: dist/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}